<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Guachi&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://guachikuo.github.io/"/>
  <updated>2017-09-16T11:28:19.801Z</updated>
  <id>http://guachikuo.github.io/</id>
  
  <author>
    <name>Chia Chi Kuo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Frontend Intermediate Course 2 &amp; 3 (二)</title>
    <link href="http://guachikuo.github.io/2017/09/16/feic2-3-2/"/>
    <id>http://guachikuo.github.io/2017/09/16/feic2-3-2/</id>
    <published>2017-09-16T10:35:16.000Z</published>
    <updated>2017-09-16T11:28:19.801Z</updated>
    
    <content type="html"><![CDATA[<h4 id="作業三的Github連結寫-CSS-必備神器：CSS-預處理器"><a href="#作業三的Github連結寫-CSS-必備神器：CSS-預處理器" class="headerlink" title="作業三的Github連結寫 CSS 必備神器：CSS 預處理器"></a>作業三的Github連結<a href="https://github.com/aszx87410/frontend-intermediate-course/blob/master/homeworks/hw3.md" target="_blank" rel="external">寫 CSS 必備神器：CSS 預處理器</a></h4><p>這個作業就很好玩了，需要我們去學CSS預處理器(CSS Preprocessor)，目前最常見的就三個</p><ol><li><a href="http://sass-lang.com/" target="_blank" rel="external">Sass</a> 要run Sass的話需要去下載Ruby</li><li><a href="http://lesscss.org/" target="_blank" rel="external">Less</a> 它是用Javascript寫的，所以需要去下載Node.js</li><li><a href="http://stylus-lang.com/" target="_blank" rel="external">Stylus</a> 也是需要Node.js，相較於前面兩個是比較新的</li></ol><p>最後我選擇了Less，因為我自己已經有Node.js，Less也相對比Stylus較多人在用</p><a id="more"></a><p><strong>用完感想: 用過就會發現preprocessor的好</strong>，可以省去自己寫css的很多麻煩<br>比如有個css是這樣，我希望test2的div大小是test的四分之一，當我hover，寬就長大跟test一樣寬。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.test</span>&#123;</div><div class="line"><span class="attribute">width</span>:<span class="number">100px</span>;</div><div class="line"><span class="attribute">height</span>:<span class="number">100px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.test</span> <span class="selector-class">.test2</span>&#123;</div><div class="line"><span class="attribute">width</span>:<span class="number">50px</span>;</div><div class="line"><span class="attribute">height</span>:<span class="number">50px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.test</span> <span class="selector-class">.test2</span><span class="selector-pseudo">:hover</span>&#123;</div><div class="line"><span class="attribute">width</span>:<span class="number">100px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>會發現我需要一直重複打parent的class name，然後一直重複打雷同的寬高。 這時候如果先透過preprocessor就可以看出顯著的方便性!<br>例如Less的副檔名是<code>.less</code>，我就可以直接這樣寫一個test.less<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="variable">@default_w :</span> <span class="number">100</span>;</div><div class="line"><span class="variable">@default_h :</span> <span class="number">100</span>;</div><div class="line"></div><div class="line"><span class="selector-class">.test</span>&#123;</div><div class="line"><span class="attribute">width</span>: <span class="variable">@default_w</span> px;</div><div class="line"><span class="attribute">height</span>:<span class="variable">@default_h</span> px;</div><div class="line"><span class="selector-class">.test2</span>&#123;</div><div class="line"><span class="attribute">width</span>: <span class="variable">@default_w</span>/<span class="number">2</span> px;</div><div class="line"><span class="attribute">height</span>: <span class="variable">@default_h</span>/<span class="number">2</span> px;</div><div class="line"></div><div class="line"><span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span>&#123;</div><div class="line"><span class="attribute">width</span>: <span class="variable">@default_w</span> px;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>之後在terminal上打上<code>lessc test.less test.css</code>它就會編譯成上面css的樣子，好處是我像寫code一樣直接巢狀往下寫，而且當我要改變div test的大小我直接改變變數即可，不用像css一樣一個一個慢慢修，自己用過的感覺真的非常愛!</p><p>學到新東西的心情就非常好<br>最後就分享一下我hw2和hw3的程式 <a href="https://github.com/guachikuo/website_project/tree/master/hw2&amp;hw3" target="_blank" rel="external">hw2&amp;hw3_github</a><br>這只是我學習過程的紀錄而已，絕對不是正解，我也還在學習，可能錯誤還是很多，還請指教!</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;作業三的Github連結寫-CSS-必備神器：CSS-預處理器&quot;&gt;&lt;a href=&quot;#作業三的Github連結寫-CSS-必備神器：CSS-預處理器&quot; class=&quot;headerlink&quot; title=&quot;作業三的Github連結寫 CSS 必備神器：CSS 預處理器&quot;&gt;&lt;/a&gt;作業三的Github連結&lt;a href=&quot;https://github.com/aszx87410/frontend-intermediate-course/blob/master/homeworks/hw3.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;寫 CSS 必備神器：CSS 預處理器&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;這個作業就很好玩了，需要我們去學CSS預處理器(CSS Preprocessor)，目前最常見的就三個&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://sass-lang.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sass&lt;/a&gt; 要run Sass的話需要去下載Ruby&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://lesscss.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Less&lt;/a&gt; 它是用Javascript寫的，所以需要去下載Node.js&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stylus-lang.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Stylus&lt;/a&gt; 也是需要Node.js，相較於前面兩個是比較新的&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最後我選擇了Less，因為我自己已經有Node.js，Less也相對比Stylus較多人在用&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Frontend Intermediate Course 2 &amp; 3 (一)</title>
    <link href="http://guachikuo.github.io/2017/09/16/feic2-3/"/>
    <id>http://guachikuo.github.io/2017/09/16/feic2-3/</id>
    <published>2017-09-16T09:00:53.000Z</published>
    <updated>2017-09-16T11:27:50.514Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;這兩次的課程比較簡單，我就一次把它們完成，不過分兩篇寫。</p><h4 id="作業二的Github連結讓畫面變得更動態：神奇的-CSS-transition"><a href="#作業二的Github連結讓畫面變得更動態：神奇的-CSS-transition" class="headerlink" title="作業二的Github連結讓畫面變得更動態：神奇的 CSS transition"></a>作業二的Github連結<a href="https://github.com/aszx87410/frontend-intermediate-course/blob/master/homeworks/hw2.md" target="_blank" rel="external">讓畫面變得更動態：神奇的 CSS transition</a></h4><p>這個作業希望我們利用CSS的<code>transition</code>讓單調的html活潑起來。 目標是hover每個方塊時，希望讓這些broadcast的陰影有浮動出來的效果，以及讓整個方塊變亮。 也因為需要有漸變的感覺，所以必須使用<code>transition</code>。<br><a id="more"></a></p><ol><li>浮動出來: 只要利用<code>box-shadow</code>即可。</li><li>方塊變亮: 我們也只需要利用<code>filter:brightness(150%);</code>就完成了!<br>再來利用transition讓他們有漸變的動畫:<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.broadcast</span> &#123;</div><div class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</div><div class="line">  <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</div><div class="line">  <span class="attribute">transition</span>: filter <span class="number">0.5s</span>, box-shadow <span class="number">0.5s</span>;</div><div class="line">  <span class="attribute">transition-delay</span>: <span class="number">0s</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.broadcast</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="attribute">box-shadow</span>: <span class="number">3px</span> <span class="number">3px</span> <span class="number">10px</span> <span class="number">3px</span> <span class="number">#000000</span>;</div><div class="line">  <span class="attribute">filter</span>: <span class="built_in">brightness</span>(150%);</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ol><p>我讓filter和box-shadow的動畫過程花0.5秒。delay的意思是當我hover過去時，它會隔幾秒才會開始動畫，我暫時設成0s直接變化，到這邊基本上hw2就完成了!</p><h4 id="成果"><a href="#成果" class="headerlink" title="成果:"></a>成果:</h4><h5 id="Hover前"><a href="#Hover前" class="headerlink" title="Hover前"></a>Hover前</h5><img src="/2017/09/16/feic2-3/screenshot1.jpg" alt="hover前" title="hover前"> <h5 id="Hover後"><a href="#Hover後" class="headerlink" title="Hover後"></a>Hover後</h5><img src="/2017/09/16/feic2-3/screenshot2.jpg" alt="hover後" title="hover後">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;這兩次的課程比較簡單，我就一次把它們完成，不過分兩篇寫。&lt;/p&gt;
&lt;h4 id=&quot;作業二的Github連結讓畫面變得更動態：神奇的-CSS-transition&quot;&gt;&lt;a href=&quot;#作業二的Github連結讓畫面變得更動態：神奇的-CSS-transition&quot; class=&quot;headerlink&quot; title=&quot;作業二的Github連結讓畫面變得更動態：神奇的 CSS transition&quot;&gt;&lt;/a&gt;作業二的Github連結&lt;a href=&quot;https://github.com/aszx87410/frontend-intermediate-course/blob/master/homeworks/hw2.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;讓畫面變得更動態：神奇的 CSS transition&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;這個作業希望我們利用CSS的&lt;code&gt;transition&lt;/code&gt;讓單調的html活潑起來。 目標是hover每個方塊時，希望讓這些broadcast的陰影有浮動出來的效果，以及讓整個方塊變亮。 也因為需要有漸變的感覺，所以必須使用&lt;code&gt;transition&lt;/code&gt;。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Frontend Intermediate Course 1</title>
    <link href="http://guachikuo.github.io/2017/09/15/feic1/"/>
    <id>http://guachikuo.github.io/2017/09/15/feic1/</id>
    <published>2017-09-15T06:19:18.000Z</published>
    <updated>2017-09-16T11:31:18.870Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;給自己訂一個目標，想要在找工作這段時間，<strong>自己寫出一個簡單的網站</strong>，運氣也很好的在ptt看到胡立老師之前開了一個免費的課程，雖然之前沒機會參加，便還是決定從這裡下手，直接邊做邊學。 課程 <a href="https://github.com/aszx87410/frontend-intermediate-course" target="_blank" rel="external">Frontend Intermediate Course</a> 總共有十堂，每堂老師都有訂定一個這次要完成的目標，跟提供一些參考資料。<br>&emsp;&emsp;我的目標就是自己想盡辦法寫出一遍出來，然後再去看課程youtube做比較以及修正!<br><a id="more"></a></p><hr><h4 id="作業一的Github連結-基本-HTML-CSS-練習：以-Twitch-為例"><a href="#作業一的Github連結-基本-HTML-CSS-練習：以-Twitch-為例" class="headerlink" title="作業一的Github連結: 基本 HTML/CSS 練習：以 Twitch 為例"></a>作業一的Github連結: <a href="https://github.com/aszx87410/frontend-intermediate-course/blob/master/homeworks/hw1.md" target="_blank" rel="external">基本 HTML/CSS 練習：以 Twitch 為例</a></h4><p>這個作業就是基本的使用HTML和CSS，去呈現這個樣子<br><img src="/2017/09/15/feic1/hw1_demo.png" alt="hw1_demo.png" title=""><br>圖片來源: 課程裡胡立老師的圖</p><p>每個方塊做好，其實複製九個出來就可以了，不過最讓我傷腦筋的就是排版。雖然作業沒有要求RWD，但是我自己希望從一開始就達到RWD的效果，不然之後再改也很麻煩，所以不管是置中的問題，還是達到RWD的效果，確實花了點時間(自己有一段時間沒碰過HTML/CSS)。<br>作業規定每個方塊寬是300px，每行三個，總共三行九個。 看完<a href="https://internetingishard.com/html-and-css/floats" target="_blank" rel="external">Floats</a>後，我開始大量使用<code>float</code>。 </p><ol><li>利用<code>float:left;</code>，再去調整<code>margin</code>的比例去達到每行符合三個方塊的大小。</li><li>方塊下面的圓圖配合文字也用這個方式，文字如果overflow就<code>overflow:hidden;</code></li></ol><p>但是這個方法真的很難調整，不管是置中還是條間距，我自己也弄得不是很愛。</p><p>後來再往下看就看到了<a href="https://internetingishard.com/html-and-css/flexbox/" target="_blank" rel="external">FlexBox</a>，發現flex在左右跟上下置中，比起之前用margin來的準確而且方便。我用兩層div去包九個broadcast<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.container</span>&#123;</div><div class="line"><span class="attribute">display</span>: flex;</div><div class="line">  <span class="attribute">justify-content</span>: center;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.row</span>&#123;</div><div class="line"><span class="attribute">width</span>: <span class="number">1000px</span>;</div><div class="line"><span class="attribute">display</span>: flex;</div><div class="line"><span class="attribute">flex-wrap</span>: wrap;</div><div class="line"><span class="attribute">justify-content</span>: space-around;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.broadcast</span>&#123;</div><div class="line"><span class="attribute">width</span>: <span class="number">300px</span>;</div><div class="line"><span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>用了覺得調整方便很多，先用<code>div container</code>去置中，<code>div row</code>寬度設1000px，再用<code>justify-cotent: space-around;</code>等距排列broadcast，那<br>因為broadcast的寬度只有300px，所以一行最多只能放三個，如果超過:<code>flex-wrap:wrap</code>往下一行擺。 這樣完成後左右距離調整好了，但是會發現上下黏在一起<br><img src="/2017/09/15/feic1/screenshot1.jpg" alt="screenshot1.jpg" title=""><br>解決方法很簡單，就跟上面一樣在broadcast中加上<code>margin-bottom: 30px;</code>。</p><p>後來聽說用<code>grid</code>可能更方便，準備來研究一下<a href="https://css-tricks.com/snippets/css/complete-guide-grid/" target="_blank" rel="external">A Complete Guide to Grid</a></p><p>作業要求文字overflow時，需顯示 … ，如果只是一般的<code>overflow:hidden</code>，它就是直接讓文字消失。處理方式很簡單在css上面加上<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">white-space</span>: <span class="selector-tag">nowrap</span>;</div><div class="line"><span class="selector-tag">text-overflow</span>: <span class="selector-tag">ellipsis</span>;</div></pre></td></tr></table></figure></p><p>它就會變成 … 了!</p><p>因為自己真的一段時間沒碰過HTML/CSS，所以花了不少時間在重新回憶，慶幸的是還是把它寫出來了:)<br><img src="/2017/09/15/feic1/screenshot2.jpg" alt="screenshot2.jpg" title=""></p><p>最後就分享一下我的程式 <a href="https://github.com/guachikuo/website_project/tree/master/hw1" target="_blank" rel="external">hw1_github</a><br>這只是我學習過程的紀錄而已，絕對不是正解，我也還在學習，可能錯誤還是很多，還請指教!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;給自己訂一個目標，想要在找工作這段時間，&lt;strong&gt;自己寫出一個簡單的網站&lt;/strong&gt;，運氣也很好的在ptt看到胡立老師之前開了一個免費的課程，雖然之前沒機會參加，便還是決定從這裡下手，直接邊做邊學。 課程 &lt;a href=&quot;https://github.com/aszx87410/frontend-intermediate-course&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Frontend Intermediate Course&lt;/a&gt; 總共有十堂，每堂老師都有訂定一個這次要完成的目標，跟提供一些參考資料。&lt;br&gt;&amp;emsp;&amp;emsp;我的目標就是自己想盡辦法寫出一遍出來，然後再去看課程youtube做比較以及修正!&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
